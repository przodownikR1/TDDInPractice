buildscript {
	ext {
		springBootVersion = '2.0.0.RC1'
		dockerPluginVersion = '1.2'
	}
	repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" } 
        maven { url "https://plugins.gradle.org/m2/"}
    }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:${dockerPluginVersion}")
		classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
		
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply from: "gradle/boot.gradle"
apply from: "gradle/integrationTest.gradle"
apply from: "gradle/test.gradle"
apply from: "gradle/coverage.gradle"
apply from: "gradle/check.gradle"

group = 'pl.java.scalatech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    compile group: 'org.jolokia', name: 'jolokia-core', version: '1.3.3'
	compile 'com.google.guava:guava:20.+'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.4'
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile 'com.github.tomakehurst:wiremock-standalone:2.14.0'
	testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
}
compileJava.options.fork = true
//compileJava.options.forkOptions.executable = /usr/lib/jvm/java-8-oracle/bin

sourceSets {
        main { compileClasspath += configurations.compile }
        test {
                compileClasspath += configurations.compile
                runtimeClasspath += configurations.compile
        }
}

task makeDirs(group: 'startup',  description: 'create dictionary infrastucture'){

        doFirst(){
        def sources = [sourceSets.main, sourceSets.test]
        sources*.allSource*.srcDirs.flatten().each { File srcDir ->
                srcDir.mkdirs()
        }
}
}

task buildDocker(type: Docker, dependsOn: assemble) {
    push = false
    applicationName = jar.baseName
    tagVersion=project.version
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
    copy {
      from jar
      from file('src/main/docker')
      into stageDir
    }
  }

}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion '5.0.2.RELEASE'
        }
    }
}
jar {
    baseName = 'gitInfo-connector'
    version = null
}

task wrapper(type: Wrapper) {

}
